{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x79Ea391369845428cd204C0bcf97bb6081717BBA",
    "txHash": "0xd936b4af59e103ef71086052fb2fbdc00bb6879b1c799695648b84a6f9864549"
  },
  "proxies": [
    {
      "address": "0x078c65Ff670580196C52BFa29892BaCab493a740",
      "txHash": "0x2a4f6c31ad9ea08437f5d86e75d8d53fa8c233d50b00ee0f9adc87f7b29bfdc9",
      "kind": "transparent"
    }
  ],
  "impls": {
    "81382cf26a096af80369f5e77fd2b476490ffae35e2b848b1330d94ebc1564ed": {
      "address": "0xd1Cd5e48C9e98aCcCa5066997dF60e4BEb64eA2A",
      "txHash": "0x24b32bbd202baa6998a74cb350eb9437527e50e12017cfc4a6d385187836b290",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "label": "_name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage",
            "contract": "ERC721Time",
            "src": "contracts/mocks/ERC721Time.sol:28"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "ERC721Time",
            "src": "contracts/mocks/ERC721Time.sol:31"
          },
          {
            "label": "_tokenData",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_struct(TokenData)7023_storage)",
            "contract": "ERC721Time",
            "src": "contracts/mocks/ERC721Time.sol:35"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Time",
            "src": "contracts/mocks/ERC721Time.sol:38"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Time",
            "src": "contracts/mocks/ERC721Time.sol:41"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Time",
            "src": "contracts/mocks/ERC721Time.sol:44"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721Enumerable",
            "src": "contracts/mocks/ERC721Enumerable.sol:17"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721Enumerable",
            "src": "contracts/mocks/ERC721Enumerable.sol:20"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "8",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721Enumerable",
            "src": "contracts/mocks/ERC721Enumerable.sol:23"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721Enumerable",
            "src": "contracts/mocks/ERC721Enumerable.sol:26"
          },
          {
            "label": "sigNonces",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LensNFTBase",
            "src": "contracts/mocks/LensNFTBase.sol:32"
          },
          {
            "label": "lastInitializedRevision",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256",
            "contract": "VersionedInitializable",
            "src": "contracts/mocks/VersionedInitializable.sol:29"
          },
          {
            "label": "_state",
            "offset": 0,
            "slot": "12",
            "type": "t_enum(ProtocolState)3640",
            "contract": "LensMultiState",
            "src": "contracts/mocks/LensMultiState.sol:18"
          },
          {
            "label": "_profileCreatorWhitelisted",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LensHubStorage",
            "src": "contracts/mocks/LensHubStorage.sol:45"
          },
          {
            "label": "_followModuleWhitelisted",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LensHubStorage",
            "src": "contracts/mocks/LensHubStorage.sol:46"
          },
          {
            "label": "_collectModuleWhitelisted",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LensHubStorage",
            "src": "contracts/mocks/LensHubStorage.sol:47"
          },
          {
            "label": "_referenceModuleWhitelisted",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LensHubStorage",
            "src": "contracts/mocks/LensHubStorage.sol:48"
          },
          {
            "label": "_dispatcherByProfile",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "LensHubStorage",
            "src": "contracts/mocks/LensHubStorage.sol:50"
          },
          {
            "label": "_profileIdByHandleHash",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "LensHubStorage",
            "src": "contracts/mocks/LensHubStorage.sol:51"
          },
          {
            "label": "_profileById",
            "offset": 0,
            "slot": "19",
            "type": "t_mapping(t_uint256,t_struct(ProfileStruct)3667_storage)",
            "contract": "LensHubStorage",
            "src": "contracts/mocks/LensHubStorage.sol:52"
          },
          {
            "label": "_pubByIdByProfile",
            "offset": 0,
            "slot": "20",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(PublicationStruct)3680_storage))",
            "contract": "LensHubStorage",
            "src": "contracts/mocks/LensHubStorage.sol:53"
          },
          {
            "label": "_defaultProfileByAddress",
            "offset": 0,
            "slot": "21",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LensHubStorage",
            "src": "contracts/mocks/LensHubStorage.sol:55"
          },
          {
            "label": "_profileCounter",
            "offset": 0,
            "slot": "22",
            "type": "t_uint256",
            "contract": "LensHubStorage",
            "src": "contracts/mocks/LensHubStorage.sol:57"
          },
          {
            "label": "_governance",
            "offset": 0,
            "slot": "23",
            "type": "t_address",
            "contract": "LensHubStorage",
            "src": "contracts/mocks/LensHubStorage.sol:58"
          },
          {
            "label": "_emergencyAdmin",
            "offset": 0,
            "slot": "24",
            "type": "t_address",
            "contract": "LensHubStorage",
            "src": "contracts/mocks/LensHubStorage.sol:59"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(ProtocolState)3640": {
            "label": "enum DataTypes.ProtocolState",
            "members": [
              "Unpaused",
              "PublishingPaused",
              "Paused"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(PublicationStruct)3680_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct DataTypes.PublicationStruct))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProfileStruct)3667_storage)": {
            "label": "mapping(uint256 => struct DataTypes.ProfileStruct)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(PublicationStruct)3680_storage)": {
            "label": "mapping(uint256 => struct DataTypes.PublicationStruct)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TokenData)7023_storage)": {
            "label": "mapping(uint256 => struct IERC721Time.TokenData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ProfileStruct)3667_storage": {
            "label": "struct DataTypes.ProfileStruct",
            "members": [
              {
                "label": "pubCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "followModule",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "followNFT",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "handle",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "imageURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "followNFTURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(PublicationStruct)3680_storage": {
            "label": "struct DataTypes.PublicationStruct",
            "members": [
              {
                "label": "profileIdPointed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "pubIdPointed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "contentURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "referenceModule",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "collectModule",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "collectNFT",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(TokenData)7023_storage": {
            "label": "struct IERC721Time.TokenData",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "mintTimestamp",
                "type": "t_uint96",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    }
  }
}
